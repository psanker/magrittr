% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipe.R
\name{\%?>\%}
\alias{\%?>\%}
\title{Maybe Monad pipe}
\usage{
lhs \%?>\% rhs
}
\arguments{
\item{lhs}{A value or the magrittr placeholder.}

\item{rhs}{A function call using the magrittr semantics.}
}
\description{
In a normal pipe sequence, failure using \code{stop()} or \code{rlang::abort()}
will halt the entire sequence, failing quickly. Sometimes this is
desired, especially if all possible failing cases are understood.
However, composing a long chain of pipes together with the possibility
of failure can lead to some confusing bugs.
}
\details{
To be achieve this, the \code{rhs} has to be amended to accept "maybe"
objects as inputs and handle their cases appropriately. Specifically,
\code{rhs(nothing())} should return \code{nothing()}, while \code{rhs(just(lhs_value))}
should return either \code{just(rhs_value)} or \code{nothing()}.

It is permitted to pass in a normal R object as \code{lhs}, but it's
preferable to wrap the \code{lhs} in \code{just()}. This is especially helpful
if the start of a pipe chain \emph{can} fail. However, it's perfectly
acceptable to ignore the use of \code{just()} for objects that cannot fail.
}
\examples{
# loading a file without checking if the file exists
\dontrun{
file_path \%?>\%
  read.csv()
}

}
